---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: cert-manager

  # Source of the application manifests
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: "v1.5.3"
    chart: cert-manager

    helm:
      parameters:
        - name: "installCRDs"
          value: "true"

  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-config
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: cert-manager-config

  # Source of the application manifests
  source:
    repoURL: https://github.com/kronicle-tech/kronicle-argocd-config.git
    targetRevision: "HEAD"
    path: cert-manager-config

    helm:
      parameters:
        - name: "awsRegion"
          value: "us-west-1"
        - name: "awsRole"
          value: "arn:aws:iam::1234:role/cert-manager-example-role"
        - name: "externalDomain"
          value: "cert-manager.external.example.com"
        - name: "internalDomain"
          value: "cert-manager.internal.example.com"
        - name: "secretsManagerSecretName"
          value: "cert-manager-test-secret-name"
        - name: "zerosslEabKid"
          value: "test1234"
      valueFiles:
        - values-prod.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=false
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elastic-cloud-on-kubernetes
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: elastic-cloud-on-kubernetes

  # Source of the application manifests
  source:
    repoURL: https://helm.elastic.co
    targetRevision: "1.8.0"
    chart: eck-operator

    helm:

  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-system

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: external-secrets

  # Source of the application manifests
  source:
    repoURL: https://charts.external-secrets.io
    targetRevision: "0.3.5"
    chart: external-secrets

    helm:
      parameters:
        - name: "installCRDs"
          value: "true"

  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets-config
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: external-secrets-config

  # Source of the application manifests
  source:
    repoURL: https://github.com/kronicle-tech/kronicle-argocd-config.git
    targetRevision: "HEAD"
    path: external-secrets-config

    helm:
      parameters:
        - name: "awsRegion"
          value: "us-west-1"
        - name: "awsRole"
          value: "arn:aws:iam::1234:role/external-secrets-example-role"
      valueFiles:
        - values-prod.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=false
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kronicle
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: kronicle

  # Source of the application manifests
  source:
    repoURL: https://github.com/kronicle-tech/kronicle-argocd-config.git
    targetRevision: "HEAD"
    path: kronicle

    helm:
      parameters:
        - name: "externalDomain"
          value: "cert-manager.external.example.com"
        - name: "kronicle.app.env.ANALYTICS_PLAUSIBLE_DATA_DOMAIN"
          value: "demo.cert-manager.external.example.com"
        - name: "kronicle.app.env.CLIENT_SIDE_SERVICE_BASE_URL"
          value: "https://demo-service.cert-manager.external.example.com"
        - name: "kronicle.service.env.OPENAPI_SPEC_SERVERS_0_URL"
          value: "https://demo-service.cert-manager.external.example.com"
        - name: "secretsManagerSecretName"
          value: "kronicle-test-secret-name"
      valueFiles:
        - values-prod.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: kronicle

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
---
# Source: bootstrap/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zipkin
  namespace: argocd   # namespace must be "argocd"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # The project the application belongs to.
  project: zipkin

  # Source of the application manifests
  source:
    repoURL: https://github.com/kronicle-tech/kronicle-argocd-config.git
    targetRevision: "HEAD"
    path: zipkin

    helm:
      parameters:
        - name: "ingressIpAllowList"
          value: "1.2.3.4/32,5.6.7.8/32"
        - name: "internalDomain"
          value: "cert-manager.internal.example.com"
      valueFiles:
        - values-prod.yaml

  destination:
    server: https://kubernetes.default.svc
    namespace: zipkin

  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
