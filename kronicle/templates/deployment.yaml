apiVersion: apps/v1
kind: Deployment
metadata:
  name: kronicle-service
  labels:
    app: kronicle-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kronicle-service
  template:
    metadata:
      labels:
        app: kronicle-service
    spec:
      containers:
        - name: kronicle-service
          image: ghcr.io/kronicle-tech/kronicle-service:{{ .Values.kronicleServiceImageTag }}
          env:
            - name: REPO_FINDERS_IGNORED_REPOS_0_URL
              value: https://github.com/kronicle-tech/kronicle-metadata-repo-template.git
            - name: REPO_FINDERS_IGNORED_REPOS_1_URL
              value: https://github.com/kronicle-tech/kronicle-metadata-codebase-template.git
            - name: REPO_FINDERS_GITHUB_USERS_0_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kronicle-service-config
                  key: github-repo-finder-username
            - name: REPO_FINDERS_GITHUB_USERS_0_PERSONAL_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: kronicle-service-config
                  key: github-repo-finder-personal-access-token
            - name: ZIPKIN_BASE_URL
              value: http://zipkin.zipkin.svc.cluster.local
            - name: ZIPKIN_SAMPLE_RATE
              value: "1.0"
            - name: SONARQUBE_BASE_URL
              value: https://sonarcloud.io
          ports:
            - containerPort: 8090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kronicle-app
  labels:
    app: kronicle-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kronicle-app
  template:
    metadata:
      labels:
        app: kronicle-app
    spec:
      containers:
        - name: kronicle-app
          image: ghcr.io/kronicle-tech/kronicle-app:{{ .Values.kronicleAppImageTag }}
          env:
            - name: CLIENT_SIDE_SERVICE_BASE_URL
              value: https://demo-service.{{ .Values.externalDomain }}
            - name: SERVER_SIDE_SERVICE_BASE_URL
              value: http://kronicle-service.kronicle.svc.cluster.local
            - name: ANALYTICS_PLAUSIBLE_ENABLED
              value: "true"
            - name: ANALYTICS_PLAUSIBLE_DATA_DOMAIN
              value: demo.{{ .Values.externalDomain }}
            - name: INTRO_TITLE
              value: Kronicle Live Demo
            - name: INTRO_MARKDOWN
              value: |
                This is a live demo for [Kronicle](https://kronicle.tech). Kronicle is an open source system for
                documenting and visualising a tech stack, from software through infrastructure.

                Kronicle can help your teams with these kinds of questions:

                - *What are all the components my team owns?* When teams are merged, split and components moved from one team to another, it can be difficult for team members to remember all the components they own, especially the less frequently changes components. Kronicle provides each team with [a page that lists all their components](/teams/kronicle-project), including any extra info about how they own those components (are they shared with another team, are they a secondary owner with another team having primary owner etc.). Kronicle provides each area with [a page that shows all components owned by that area's team(s)](/areas/website).
                - *Who owns a particular component?* Each component in Kronical has a [page that lists the team(s) that own that component](/components/shop-spa).
                - *How do I get in touch with a particular team?* Each team has a [page that includes a description of the team and can include links to Slack channels, wiki pages etc.](/teams/frontend)
                - *How does a particular component fit into the tech stack?* Each component has a [page that shows an autogenerated diagram of the components it calls and the components called by it](/components/kronicle-service/dependencies). The page inclues filters that control what is shown in the diagram.
                - *What significant tech debt does my team have?* In Kronicle, tech debt items can recorded against components.  Kronicle that provides pages for [individual components](/components/kronicle-service/tech-debts), [teams](/teams/kronicle-project/tech-debts) and [whole areas](/areas/website/tech-debts) showing all the tech debt items.  Tech debt items have a descrition and a priority level.  Optionally that can include further notes and links to external resources like wikis, issue tickets etc.
                - *Which components have more than 80% code coverage and which have less?* If you use SonarQube, Kronicle can collect the code coverage figure from SonarQube for each component. Kronicle provides pages that show the code coverage status for [all components](/tests/sonar-qube-code-coverage), components in an area and components in a team.
                - *What are the response times for my component?* If you are using Zipkin for distributed tracing, Kronicle can show the response times for [incoming requests](/components/kronicle-service/response-times) and [outgoing requests](/components/kronicle-service/downstream-response-times).

                For a summary of all the types of data in this demo, see lower down on this page.
          ports:
            - containerPort: 3000
